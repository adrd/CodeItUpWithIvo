@model ContestViewModel

@using System.Web.Mvc.Expressions;

@using OJS.Common.Extensions;
@using OJS.Common.Models;
@using OJS.Web.Areas.Administration.Controllers;
@using OJS.Web.Areas.Contests.Controllers;
@using OJS.Web.Areas.Contests.ViewModels.Contests;

@using ContestsController = OJS.Web.Areas.Administration.Controllers.ContestsController

@using Resource = Resources.Areas.Contests.Views.ContestsDetails;

@{
    ViewBag.Title = Model.Name;
}

<ol class="breadcrumb">
    <li><a href="/">@Resource.Home</a></li>
    <li>@(Html.ActionLink<ListController>(Resource.Contests, c => c.Index()))</li>

    @foreach (var category in Model.ParentCategories)
    {
        var href = $"/Contests/#!/List/ByCategory/{category.Id}/{category.Name.ToUrl()}";
        <li><a href="@href">@category.Name</a></li>
    }

    <li class="active">@Model.Name</li>
</ol>

<h1 class="text-center">@ViewBag.Title</h1>

<div class="row">
    <div class="col-md-8">
        <h3>@Resource.Contest_details</h3>
        @if ((Model.CanBeCompeted || Model.UserIsAdminOrLecturerInContest) && Model.EndTime != null)
        {
            <h5>
                @Resource.Competition_active_until: @Model.EndTime.Value.ToString("HH:mm d.M.yyy")
            </h5>
        }
        @if ((Model.CanBePracticed || Model.UserIsAdminOrLecturerInContest) && Model.PracticeEndTime != null)
        {
            <h5>@Resource.Practice_active_until: @Model.PracticeEndTime.Value.ToString("HH:mm d.M.yyy")</h5>
        }
        @if (!string.IsNullOrEmpty(Model.Description))
        {
            @Html.Raw(Model.Description)
        }
        else
        {
            <div>@Resource.No_contest_description</div>
        }
        <h5>
            @Resource.Allowed_languages: |
            @foreach (var submissionType in Model.AllowedSubmissionTypes)
            {
                <span>
                    @Html.ActionLink(
                        submissionType.Name,
                        "BySubmissionType",
                        new
                        {
                            controller = "List",
                            id = submissionType.Id,
                            submissionTypeName = submissionType.Name.ToUrl()
                        }) |
                </span>
            }
        </h5>
        <h5>
            @Resource.Contest_participants: @Model.OfficialParticipants
        </h5>
        <h5>
            @Resource.Practice_participants: @Model.PracticeParticipants
        </h5>
    </div>
    <div class="col-md-4 col-sm-12" style="margin: 0 auto;">
        <h3>@Resource.Problems</h3>
        @{
            var canShowProblemsInPractice = !Model.HasPracticePassword;
            var canShowProblemsInCompete = !Model.HasContestPassword && !Model.IsActive && !Model.IsOnline;

            if ((Model.CanBePracticed && canShowProblemsInPractice) ||
                (Model.CanBeCompeted && canShowProblemsInCompete) ||
                Model.UserIsAdminOrLecturerInContest)
            {
                foreach (var problem in Model.Problems)
                {
                    <h4>@problem.Name</h4>
                    foreach (var resource in problem.Resources)
                    {
                        var resourceLink = string.IsNullOrWhiteSpace(resource.Link)
                            ? Url.Action<CompeteController>(c => c.DownloadResource(resource.ResourceId, false))
                            : resource.Link;
                        <p>
                            @if (resource.ProblemType == ProblemResourceType.ProblemDescription)
                            {
                                <span class="glyphicon glyphicon-list-alt resource-glyph"></span>
                            }
                            else if (resource.ProblemType == ProblemResourceType.AuthorsSolution)
                            {
                                <span class="glyphicon glyphicon-thumbs-up resource-glyph"></span>
                            }
                            else if (resource.ProblemType == ProblemResourceType.Link)
                            {
                                <span class="glyphicon glyphicon-link resource-glyph"></span>
                            }
                            else
                            {
                                <span class="glyphicon  glyphicon-question-sign"></span>
                            }
                            <a href="@resourceLink" target="_blank" class="resource-link">@resource.Name</a>
                        </p>
                    }
                }
            }
            else
            {
                <text>
                    <p>@Resource.Problems_are_not_public</p>
                </text>
            }
        }
    </div>
</div>

<div class="row">
    <div class="col-md-12 text-center">
        @if (Model.IsActive || Model.UserIsAdminOrLecturerInContest)
        {
            if (Model.UserCanCompete)
            {
                @(Html.ActionLink<CompeteController>(Resource.Compete, c => c.Index(Model.Id, true, null), null, new {@class = "btn btn-sm btn-success bottom-buffer-sm"}))
            }
            else if (Model.UserIsAdminOrLecturerInContest)
            {
                @(Html.ActionLink<CompeteController>(Resource.Compete, c => c.Index(Model.Id, true, null), null, new {@class = "btn btn-sm btn-default bottom-buffer-sm"}))
            }

            if (Model.OfficialParticipants > 0)
            {
                if (Model.UserIsParticipant || Model.UserIsAdminOrLecturerInContest)
                {
                    <a class="btn btn-sm btn-primary bottom-buffer-sm" href="/Contests/Compete/Results/Simple/@Model.Id">@Resource.Contest_results</a>
                }

                if (Model.UserIsAdminOrLecturerInContest)
                {
                    <a class="btn btn-sm btn-primary bottom-buffer-sm" href="/Contests/Compete/Results/Full/@Model.Id">@Resource.Contest_full_results</a>
                }

                if (Model.CanBePracticed)
                {
                    @:<div class="clearfix"></div>
                }
            }
        }

        @if (Model.CanBePracticed)
        {
            @(Html.ActionLink<CompeteController>(Resource.Practice, c => c.Index(Model.Id, false, null), null, new {@class = "btn btn-sm btn-primary bottom-buffer-sm"}))

            if (Model.UserIsAdminOrLecturerInContest)
            {
                <a class="btn btn-sm btn-primary bottom-buffer-sm" href="/Contests/Practice/Results/Simple/@Model.Id">@Resource.Practice_results</a>
                <a class="btn btn-sm btn-primary bottom-buffer-sm" href="/Contests/Practice/Results/Full/@Model.Id">@Resource.Practice_full_results</a>
                if (Model.CanBeCompeted || Model.OfficialParticipants > 0)
                {
                    @:<div class="clearfix"></div>
                }
            }
        }
        else if (Model.UserIsAdminOrLecturerInContest)
        {
            @(Html.ActionLink<CompeteController>(Resource.Practice, c => c.Index(Model.Id, false, null), null, new {@class = "btn btn-sm btn-default bottom-buffer-sm"}))
        }

        @if (Model.UserIsAdminOrLecturerInContest)
        {
            @(Html.ActionLink<ContestsController>(
                Resource.Edit,
                c => c.Edit(Model.Id),
                new { area = GlobalConstants.AdministrationAreaName },
                new { @class = "btn btn-sm btn-primary bottom-buffer-sm right-buffer-sm" }))

            @(Html.ActionLink<ProblemsController>(
                Resource.Problems,
                c => c.Index(Model.Id),
                new { area = GlobalConstants.AdministrationAreaName },
                new { @class = "btn btn-sm btn-primary bottom-buffer-sm right-buffer-sm" }))

            if (Model.IsOnline)
            {
                @(Html.ActionLink<ProblemGroupsController>(
                    Resource.Problem_groups,
                    c => c.Index(Model.Id),
                    new { area = GlobalConstants.AdministrationAreaName },
                    new { @class = "btn btn-sm btn-primary bottom-buffer-sm right-buffer-sm" }))
            }

            if (!Model.CanBeCompeted && Model.OfficialParticipants > 0)
            {
                @(Html.ActionLink<ContestsController>(
                    Resource.Transfer,
                    c => c.TransferParticipants(Model.Id, null),
                    new { area = GlobalConstants.AdministrationAreaName },
                    new { @class = "btn btn-sm btn-primary bottom-buffer-sm" }))
            }

            if (User.IsAdmin() && Model.IsOnline && Model.IsActive)
            {
                @(Html.ActionLink<ContestsController>(
                    Resource.Change_time,
                    c => c.ChangeActiveParticipantsEndTime(Model.Id),
                    new { area = GlobalConstants.AdministrationAreaName },
                    new { @class = "btn btn-sm btn-primary bottom-buffer-sm" }))
            }
        }
    </div>
</div>

@if (User.Identity.IsAuthenticated)
{
    Html.RenderPartial("_AllContestSubmissionsByUser");
}