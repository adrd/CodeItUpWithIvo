@model OJS.Web.Areas.Administration.ViewModels.Contest.ContestAdministrationViewModel
    
@using OJS.Common.Models

@using Resource = Resources.Areas.Administration.Contests.Views.Partials.ContestEditor;

@{
    const string OnlineOnlyContainersClassName = "online-contest-editor-container";

    var isEditForm = (this.ViewBag.CallerAction ?? string.Empty) == "Edit";
    var isActiveContest = this.ViewBag.IsActive ?? false;

    var isEditFormOfActiveContest = isEditForm && isActiveContest;
}

<fieldset>
    <legend>@Resource.General_info</legend>
    <div class="row">
        <div class="editor-label col-xs-3">
            <div class="pull-right">
                @Html.LabelFor(m => m.Name)
            </div>
        </div>
        <div class="editor-field col-xs-4">
            @Html.EditorFor(m => m.Name, new { @class = "form-control pull-left full-editor" })
        </div>
        <div class="editor-field col-xs-4">
            <span class="glyphicon glyphicon-question-sign text-primary" title="@Resource.Enter_title" data-tooltip="true"></span>
            @Html.ValidationMessageFor(m => m.Name)
        </div>
    </div>
    <br />
    <div class="row">
        <div class="editor-label col-xs-3">
            <div class="pull-right">
                @Html.LabelFor(m => m.Type)
            </div>
        </div>
        <div class="editor-field col-xs-4">
            @Html.EditorFor(m => m.Type)
            @if (isEditFormOfActiveContest)
            {
                @Html.HiddenFor(m => m.Type, new { id = $"{nameof(Model.Type)}-hidden" })
            }
        </div>
        <div class="editor-field col-xs-4">
            <span class="glyphicon glyphicon-question-sign text-primary" title="Въведете типа на състезанието" data-tooltip="true"></span>
            @Html.ValidationMessageFor(m => m.Type)
        </div>
    </div>
    <br />
    <div class="@OnlineOnlyContainersClassName hidden">
        <div class="row">
            <div class="editor-label col-xs-3">
                <div class="pull-right">
                    @Html.LabelFor(m => m.ProblemGroupsCount)
                </div>
            </div>
            <div class="editor-field col-xs-4">
                @Html.EditorFor(m => m.ProblemGroupsCount, new { IsDisabled = isEditForm })
            </div>
            <div class="editor-field col-xs-4">
                @if (isEditForm)
                {
                    <span class="glyphicon glyphicon-question-sign text-primary" title="@Resource.Problem_groups_edit_from_administration" data-tooltip="true"></span>
                    @Html.HiddenFor(m => m.ProblemGroupsCount, new { id = $"{nameof(Model.ProblemGroupsCount)}-hidden" })
                }
                else
                {
                    <span class="glyphicon glyphicon-question-sign text-primary" title="@Resource.Number_of_problem_groups" data-tooltip="true"></span>
                    @Html.ValidationMessageFor(m => m.ProblemGroupsCount)
                }
            </div>
        </div>
        <br />
    </div>
    <div class="row">
        <div class="editor-label col-xs-3">
            <div class="pull-right">
                @Html.LabelFor(m => m.CategoryId)
            </div>
        </div>
        <div class="editor-field col-xs-4">
            @Html.EditorFor(m => m.CategoryId, new { @class = "form-control pull-left full-editor" })
        </div>
        <div class="editor-field col-xs-4">
            <span class="glyphicon glyphicon-question-sign text-primary" title="@Resource.Choose_category" data-tooltip="true"></span>
            @Html.ValidationMessageFor(m => m.CategoryId)
        </div>
    </div>
    <br />
    <div class="row">
        <div class="editor-label col-xs-3">
            <div class="pull-right">
                @Html.LabelFor(m => m.Description)
            </div>
        </div>
        <div class="editor-field col-xs-8">
            @Html.EditorFor(m => m.Description, new { @class = "form-control pull-left full-editor"})
        </div>
        <div class="editor-field col-xs-1">
            <span class="glyphicon glyphicon-question-sign text-primary" title="@Resource.Enter_description" data-tooltip="true"></span>
            @Html.ValidationMessageFor(m => m.Description)
        </div>
    </div>
    <br />
</fieldset>

<fieldset>
    <legend>@Resource.Duration_info</legend>
    <div class="row">
        <div class="editor-label col-xs-3">
            <div class="pull-right">
                @Html.LabelFor(m => m.StartTime)
            </div>
        </div>
        <div class="editor-field col-xs-4">
            @Html.EditorFor(m => m.StartTime, new { @class = "form-control pull-left full-editor" })
        </div>
        <div class="editor-field col-xs-4">
            <span class="glyphicon glyphicon-question-sign text-primary" title="@Resource.Contest_start" data-tooltip="true"></span>
            @Html.ValidationMessageFor(m => m.StartTime)
        </div>
    </div>
    <br />
    <div class="row">
        <div class="editor-label col-xs-3">
            <div class="pull-right">
                @Html.LabelFor(m => m.EndTime)
            </div>
        </div>
        <div class="editor-field col-xs-4">
            @Html.EditorFor(m => m.EndTime, new { @class = "form-control pull-left full-editor" })
        </div>
        <div class="editor-field col-xs-4">
            <span class="glyphicon glyphicon-question-sign text-primary" title="@Resource.Contest_end" data-tooltip="true"></span>
            @Html.ValidationMessageFor(m => m.EndTime)
        </div>
    </div>
    <br />
    <div class="row">
        <div class="editor-label col-xs-3">
            <div class="pull-right">
                @Html.LabelFor(m => m.PracticeStartTime)
            </div>
        </div>
        <div class="editor-field col-xs-4">
            @Html.EditorFor(m => m.PracticeStartTime, new { @class = "form-control pull-left full-editor" })
        </div>
        <div class="editor-field col-xs-4">
            <span class="glyphicon glyphicon-question-sign text-primary" title="@Resource.Practice_start" data-tooltip="true"></span>
            @Html.ValidationMessageFor(m => m.PracticeStartTime)
        </div>
    </div>
    <br />
    <div class="row">
        <div class="editor-label col-xs-3">
            <div class="pull-right">
                @Html.LabelFor(m => m.PracticeEndTime)
            </div>
        </div>
        <div class="editor-field col-xs-4">
            @Html.EditorFor(m => m.PracticeEndTime, new { @class = "form-control pull-left full-editor" })
        </div>
        <div class="editor-field col-xs-4">
            <span class="glyphicon glyphicon-question-sign text-primary" title="@Resource.Practice_end" data-tooltip="true"></span>
            @Html.ValidationMessageFor(m => m.PracticeEndTime)
        </div>
    </div>
    <br />
    <div class="@OnlineOnlyContainersClassName hidden">
        <div class="row">
            <div class="editor-label col-xs-3">
                <div class="pull-right">
                    @Html.LabelFor(m => m.Duration)
                </div>
            </div>
            <div class="editor-field col-xs-4">
                @Html.EditorFor(m => m.Duration, new { IsDisabled = isEditFormOfActiveContest })
                @if (isEditFormOfActiveContest)
                {
                    @Html.HiddenFor(m => m.Duration, new { id = $"{nameof(Model.Duration)}-hidden" })
                }
            </div>
            <div class="editor-field col-xs-4">
                <span class="glyphicon glyphicon-question-sign text-primary" title="@Resource.Duration" data-tooltip="true"></span>
                @Html.ValidationMessageFor(m => m.Duration)
            </div>
        </div>
        <br />
    </div>
</fieldset>

<fieldset>
    <legend>@Resource.Passowords_info</legend>
    <div class="row">
        <div class="editor-label col-xs-3">
            <div class="pull-right">
                @Html.LabelFor(m => m.ContestPassword)
            </div>
        </div>
        <div class="editor-field col-xs-4">
            @Html.EditorFor(m => m.ContestPassword, new { @class = "form-control pull-left full-editor" })
        </div>
        <div class="editor-field col-xs-4">
            <span class="glyphicon glyphicon-question-sign text-primary" title="@Resource.Contest_password" data-tooltip="true"></span>
            @Html.ValidationMessageFor(m => m.ContestPassword)
        </div>
    </div>
    <br />
    <div class="row">
        <div class="editor-label col-xs-3">
            <div class="pull-right">
                @Html.LabelFor(m => m.PracticePassword)
            </div>
        </div>
        <div class="editor-field col-xs-4">
            @Html.EditorFor(m => m.PracticePassword, new { @class = "form-control pull-left full-editor" })
        </div>
        <div class="editor-field col-xs-4">
            <span class="glyphicon glyphicon-question-sign text-primary" title="@Resource.Practice_password" data-tooltip="true"></span>
            @Html.ValidationMessageFor(m => m.PracticePassword)
        </div>
    </div>
    <br />
    <div class="row">
        <div class="editor-label col-xs-3">
            <div class="pull-right">
                @Html.LabelFor(m => m.NewIpPassword)
            </div>
        </div>
        <div class="editor-field col-xs-4">
            @Html.EditorFor(m => m.NewIpPassword, new { @class = "form-control pull-left full-editor" })
        </div>
        <div class="editor-field col-xs-4">
            <span class="glyphicon glyphicon-question-sign text-primary" title="Въведете парола за ново IP" data-tooltip="true"></span>
            @Html.ValidationMessageFor(m => m.NewIpPassword)
        </div>
    </div>
    <br />
</fieldset>

<fieldset>
    <legend>@Resource.Options</legend>
    <div class="row">
        <div class="editor-label col-xs-3">
            <div class="pull-right">
                @Html.LabelFor(m => m.LimitBetweenSubmissions)
            </div>
        </div>
        <div class="editor-field col-xs-4">
            @Html.EditorFor(m => m.LimitBetweenSubmissions, new { @class = "form-control pull-left full-editor" })
        </div>
        <div class="editor-field col-xs-4">
            <span class="glyphicon glyphicon-question-sign text-primary" title="@Resource.Submissions_limit" data-tooltip="true"></span>
            @Html.ValidationMessageFor(m => m.LimitBetweenSubmissions)
        </div>
    </div>
    <br />
    <div class="row">
        <div class="editor-label col-xs-3">
            <div class="pull-right">
                @Html.LabelFor(m => m.OrderBy)
            </div>
        </div>
        <div class="editor-field col-xs-4">
            @Html.EditorFor(m => m.OrderBy, new { @class = "form-control pull-left full-editor" })
        </div>
        <div class="editor-field col-xs-4">
            <span class="glyphicon glyphicon-question-sign text-primary" title="@Resource.Contest_order" data-tooltip="true"></span>
            @Html.ValidationMessageFor(m => m.OrderBy)
        </div>
    </div>
    <br />
    <div class="row">
        <div class="editor-label col-xs-3">
            <div class="pull-right">
                @Html.LabelFor(m => m.IsVisible)
            </div>
        </div>
        <div class="editor-field col-xs-4">
            @Html.EditorFor(m => m.IsVisible, new { @class = "form-control pull-left full-editor" })
        </div>
        <div class="editor-field col-xs-4">
            <span class="glyphicon glyphicon-question-sign text-primary" title="@Resource.Contest_visibility" data-tooltip="true"></span>
            @Html.ValidationMessageFor(m => m.IsVisible)
        </div>
    </div>
    <br />  
    <div class="row">
        <div class="editor-label col-xs-3">
            <div class="pull-right">
                @Html.LabelFor(m => m.AllowedIps)
            </div>
        </div>
        <div class="editor-field col-xs-4">
            @(Html.Kendo().AutoCompleteFor(x => Model.AllowedIps)
                .DataTextField("Value")
                .Value(Model.RawAllowedIps)
                .Placeholder("Въведете позволени IP-та (разделени със ',')")
                .Filter(FilterType.Contains)
                .Separator(",")
                .DataSource(dataSource => dataSource
                    .ServerFiltering(true)
                    .Read(read => read.Action("ReadIpsContaining", "Contests").Data("onContestIpData")))
                    .HtmlAttributes(new { style = "width: 100%" })
            )
        </div>
        <div class="editor-field col-xs-4">
            <span class="glyphicon glyphicon-question-sign text-primary" title="Въведете позволените IP-та за състезанието (разделени със ',')" data-tooltip="true"></span>
            @Html.ValidationMessageFor(m => m.AllowedIps)
        </div>
    </div>
    <br />
    <div class="row">
        <div class="editor-label col-xs-3">
            <div class="pull-right">
                @Html.LabelFor(m => m.AutoChangeTestsFeedbackVisibility)
            </div>
        </div>
        <div class="editor-field col-xs-4">
            @Html.EditorFor(m => m.AutoChangeTestsFeedbackVisibility, new { @class = "form-control pull-left full-editor" })
        </div>
        <div class="editor-field col-xs-4">
            <span class="glyphicon glyphicon-question-sign text-primary" title="@Resource.Auto_change_tests" data-tooltip="true"></span>
            @Html.ValidationMessageFor(m => m.AutoChangeTestsFeedbackVisibility)
        </div>
    </div>
    <br />
</fieldset>

<script>
    function onContestIpData() {
        var ips = $('#AllowedIps').val().split(', ');
        return {
            value: ips.length ? ips[ips.length - 1] : ''
        };
    }

    $(function () {
        var categoryName ="@Model.CategoryName";
        if (categoryName !== "" && typeof categoryName !== typeof undefined) {
            $("#CategoryId").data("kendoComboBox").text(categoryName);
        }

        var type = $("#Type");
        type.change(function (ev) {
            ev.preventDefault();
            toggleOnlineOnlyFields(type.val());
        });

        toggleOnlineOnlyFields(type.val());

        if (@isEditFormOfActiveContest.ToString().ToLower()) {
            type.data("kendoDropDownList").enable(false);
        }

        function toggleOnlineOnlyFields(contestType) {
            var problemGroupsCountHidden = $('#ProblemGroupsCount-hidden');
            var problemGroupsCount = $('#ProblemGroupsCount');
            var problemGroupsCountInput = problemGroupsCount.parent().children(':first-child');
            var onlineContestFields = $(".@OnlineOnlyContainersClassName");

            if (contestType == @((int)ContestType.OnlinePracticalExam)) {
                if (@Model.ProblemGroupsCount === 0) {
                    var defaultProblemGroupsCount = @GlobalConstants.DefaultProblemGroupsCountForOnlineContest;
                    problemGroupsCountHidden.val(defaultProblemGroupsCount);
                    problemGroupsCount.val(defaultProblemGroupsCount);
                    problemGroupsCountInput.val(defaultProblemGroupsCount);
                }

                onlineContestFields.removeClass('hidden');
            } else {
                onlineContestFields.addClass('hidden');

                var problemGroupsCountValue = @Model.ProblemGroupsCount;
                problemGroupsCountHidden.val(problemGroupsCountValue);
                problemGroupsCount.val(problemGroupsCountValue);
                problemGroupsCountInput.val(problemGroupsCountValue);
            }
        };
    });
</script>