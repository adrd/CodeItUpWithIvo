@model OJS.Web.Areas.Administration.ViewModels.Contest.ChangeParticipationEndTimeViewModel

@using Resource = Resources.Areas.Administration.Contests.Views.ChangeTime
@using SharedResource = Resources.Areas.Contests.ContestsGeneral

@{
    ViewBag.Title = Resource.Page_title;
}

@section Styles {
    <link href="/Content/Contests/change-time.css" rel="stylesheet" />
}

<div id="change-time-container">
    <h1>@ViewBag.Title</h1>
    <h2>@Resource.Contest :
        <a href="@ContestsHelper.GetUrl(Model.ContesId, Model.ContestName)">
            <strong class="text-success">@Model.ContestName</strong>
        </a>
    </h2>
    <h3>@Resource.Change_time_legend</h3>
    
    <ul class="nav nav-tabs nav-justified top-buffer-lg">
        <li role="presentation" class="active">
            <a href="#change-time-by-interval" role="tab" data-toggle="tab">@Resource.Change_time_by_time_interval</a>
        </li>
        <li role="presentation">
            <a href="#change-time-by-user" role="tab" data-toggle="tab">@Resource.Change_time_by_user</a>
        </li>
    </ul>

    <div class="top-buffer">
        <div class="row">
            <div class="col-xs-12 bottom-buffer">
                <div class="center-block">
                    <span class="right-buffer glyphicon glyphicon-time"></span>
                    @Html.LabelFor(m => m.TimeInMinutes)
                </div>
            </div>
            <div class="editor-field col-xs-3 text-center">
                <div class="number-input">
                    @Html.EditorFor(m => m.TimeInMinutes, new { @class = "pull-left" })
                </div>
            </div>
            <div class="editor-field col-xs-4">
                @Html.ValidationMessageFor(m => m.TimeInMinutes)
            </div>
        </div>
    </div>

    <div class="tab-content">
        @Html.Partial("_ChangeParticipationEndTimeByTimeInterval", Model.ChangeByInterval)
        @Html.Partial("_ChangeParticipationEndTimeByUser", Model.ChangeByUser)
    </div>

    <div class="row top-buffer">
        <div class="editor-label col-xs-2">
            <span id="add-time-for-participants-btn" class="btn btn-success pull-left top-buffer">@Resource.Add_time</span>
            <span id="subtract-time-for-participants-btn" class="btn btn-danger pull-left top-buffer hidden">@Resource.Subtract_time</span>
        </div>
        <div class="editor-label col-sm-2">
            @(Html.ActionLink<OJS.Web.Areas.Contests.Controllers.ContestsController>(
                  SharedResource.Cancel, c => c.Details(Model.ContesId), null, new { @class = "btn btn-primary top-buffer" }))
        </div>
    </div>
</div>
<div id="confirm-window-pop-up-container" style="display: none">
    <div id="confirm-window-pop-up" class="row">
        <h3 id="confirm-window-header"></h3>
        <label name="Name">@Resource.Enter_your_username</label>
        <input id="username-confirmation-input" class="form-control" type="text"/>
        <div class="container-fluid row">
            <input id="submit-form-button" type="submit" class="btn btn-success pull-left top-buffer col-xs-3" disabled="disabled"value="@SharedResource.Yes"/>
            <span id="cancel-btn-confirm-pop-up" class="btn btn-primary pull-right top-buffer col-xs-6">@SharedResource.Cancel</span>
        </div>
    </div>
</div>


@section Scripts{
    <script>
        $(function () {
            var addButtonSelector = '#add-time-for-participants-btn';
            var subtractButtonSelector = '#subtract-time-for-participants-btn';
            var timeInput = $('#TimeInMinutes');
            var changeTimeContainer = $('#change-time-container');
            var confirmWindow = $('#confirm-window-pop-up-container');
            var submitFormButton = $('#submit-form-button');
            var changeTimeByInterval = $('#change-time-by-interval');
            var changeTimeByUser = $('#change-time-by-user');

            showTabWithError();
            changeAddSubractButton(timeInput.val());

            $([addButtonSelector, subtractButtonSelector].join(',')).click(setConfirmWindow);

            submitFormButton.click(submitForm);

            timeInput.on('input', function () {
                changeAddSubractButton(timeInput.val());
            });

            $('#username-confirmation-input').on('input', function () {
                var value = $(this).val();
                var submitFormButtonState = value !== '@this.User.Identity.Name';
                submitFormButton.attr('disabled', submitFormButtonState);
            });

            $('#cancel-btn-confirm-pop-up').click(function () {
                confirmWindow.hide();
                changeTimeContainer.removeClass('faded');
            });

            function submitForm() {
                $('form input[name=TimeInMinutes]').val(timeInput.val());

                var formContainer = changeTimeByInterval;

                if (changeTimeByUser.is(':visible')) {
                    formContainer = changeTimeByUser;
                }

                formContainer.find('form').submit();
            }

            function setConfirmWindow() {
                setConfirmWindowHeaderPrefix();

                var inputValue = timeInput.val();

                var action = $('#action');
                var preposition = $('#preposition');
                var headerStrongElements = confirmWindow.find('#confirm-window-pop-up h3 strong');

                if (inputValue >= 0) {
                    action.text('@Resource.Add_are_you_sure');
                    headerStrongElements.css('color', "#13987E");
                    preposition.text('@Resource.To');
                } else {
                    action.text('@Resource.Subtract_are_you_sure');
                    headerStrongElements.css('color', "#DF2E1B");
                    preposition.text('@Resource.From');
                }

                var createdBeforeValue = $('#ParticipantsCreatedBeforeDateTime').val();
                var createdAfterValue = $('#ParticipantsCreatedAfterDateTime').val();
                var participantUsername = $('#UserId').data('kendoComboBox').text();

                $('#createdBefore').text(createdBeforeValue);
                $('#createdAfter').text(createdAfterValue);
                $('#username-placeholder').text(participantUsername);
                $('#minutes').text(Math.abs(inputValue));

                confirmWindow.show();
                changeTimeContainer.addClass('faded');
            }

            function setConfirmWindowHeaderPrefix() {
                var confirmWindowHeader = $('#confirm-window-header');
                var headerPrefix = '@Resource.Confirmation_message_header_prefix ';
                var headerText = '@Resource.Confirmation_message_header_change_by_interval';

                if (changeTimeByUser.is(':visible')) {
                    headerText = '@Resource.Confirmation_message_header_change_by_user';
                }

                var parser = new DOMParser();
                var header = parser.parseFromString(headerPrefix + headerText, 'text/html');

                confirmWindowHeader.html(header.body.textContent);
            }

            function changeAddSubractButton(value) {
                var addButton = $(addButtonSelector);
                var subtractButton = $(subtractButtonSelector);

                var isSubtraction = value < 0;
                var isAddition = !isSubtraction;

                addButton.toggleClass('hidden', isSubtraction);
                subtractButton.toggleClass('hidden', isAddition);
            }

            function showTabWithError() {
                var error = $('span.field-validation-error');

                if (error.length > 0) {
                    var tabWithError = error.parents('.tab-pane').first();
                    var tabId = tabWithError.get(0).id;
                    $('.nav-tabs a[href="#' + tabId + '"]').tab('show');
                }
            }
        })
    </script>
}